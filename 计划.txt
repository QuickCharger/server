2016/12/6 ... 2016/12/8
	数据可配
2016/12/9 ... 2016/12/10
	解决面临的问题
2016/12/18 ... 2016/12/23
	写简单的接收有缓冲，发送无缓冲的网络模块，接收需要拆包。未完成
2017/02/19 ...
	服务器断线重连
2017/02/23 ...
	解析数据，依托protobuf执行相应回调
2017/05/03 ...
	初步流程已经搭建完毕，cygwin的客户端已经不适用。需要搭建Client或新的server模拟真实数据传输
2017/05/04 ...
	重连机制失败，需要再调试。
	DatabaseServer崩，跑飞了。
	lambda呵呵，用接口吧。
2017/05/10
	重连机制时好时坏，需要再看看。
	C风格的复制可以改成string，release下效率几乎一样。
2017/05/13
	重连机制时好时坏，需要再看看。
	消息号放在结构体外部
	完善框架中消息传输机制
2017/05/23
	框架中消息传输崩需要看看
	添加MessageDispatch类
2017/06/01
	纯虚函数调用，崩
	添加MessageDispatch类
2017/06/03
	添加MessageDispatch类
2017/06/08
	传送消息修改为可以只传消息号，对应的接收也要修改	暂时用空消息体解决
	添加timer
	session放在server中，OnReadCB不需要session参数
2017/06/12
	添加timer,添加timerManager
2017/06/15
	连接mysql并初始化
	添加服务器之间的认证
	添加发送服务器快捷方式
2018/1/1
	重写buffer
2018/12/12
	重写项目cmake
	添加timer
2018/12/25
	添加心跳机制
	被动接收的服务器设置读30秒超时
	主动接收的服务器设置10秒不断发送心跳包
	规范库的使用 vs2015示例：包含windows_x86_32_msvc14 和 windows_x86_64_msvc14 分别表示32位库与64位库 路径下分别又包含release和debug版本。 debug使用/MDd release使用/MD




面临的问题
	确定是否用libevent做主线程，是要单独一个线程，还是单开一个线程做数据收发。
		实践证明，libevent是单线程的。接收到数据后，最好是开辟新线程执行，然后再销毁。
	一次接受到的数据是一个完成的可正常解析的数据还是不完整数据还是两个数据的尾头，专有名词，粘包
	修改服务器与服务器的认证 服务器与客户端的认证机制