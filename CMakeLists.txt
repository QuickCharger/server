CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)
PROJECT(Server CXX)

SET(THIRDPATH ${CMAKE_SOURCE_DIR}/third_part)

# LIBEVENT
SET(LIBEVENTBIN "${CMAKE_SOURCE_DIR}/libevent-2.1.12-stable/bin")
IF(WIN32)
	SET(LIBEVENT_INCLUDE	"${LIBEVENTBIN}/include")
	SET(LIBEVENT_LIB_PATH	"${LIBEVENTBIN}/lib")
	SET(LIBEVENT_LIB		"event" "event_core" "event_extra")
ELSEIF(UNIX AND NOT APPLE)
	SET(LIBEVENT_INCLUDE	"${LIBEVENTBIN}/include")
	SET(LIBEVENT_LIB_PATH	"${LIBEVENTBIN}/lib")
	SET(LIBEVENT_LIB		"event" "event_core" "event_extra" "event_pthreads")
ENDIF()

# EXTRA
IF(WIN32)
	SET(EXTRA_INCLUDE	"")
	SET(EXTRA_LIB_PATH	"")
	SET(EXTRA_LIB		"ws2_32.lib" "wsock32.lib")
ELSEIF(UNIX AND NOT APPLE)
	SET(EXTRA_INCLUDE	"")
	SET(EXTRA_LIB_PATH	"")
	SET(EXTRA_LIB		"pthread")
ENDIF()


IF(WIN32)
	add_definitions(-D_UNICODE -D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS -D_WINSOCK_DEPRECATED_NO_WARNINGS)
ENDIF()


INCLUDE_DIRECTORIES(
	${CMAKE_SOURCE_DIR}/../src
	${LIBEVENT_INCLUDE} 
)

LINK_DIRECTORIES(
	${LIBEVENT_LIB_PATH} 
)

file(GLOB_RECURSE SOURCES
	"${CMAKE_SOURCE_DIR}/src/*.h"
	"${CMAKE_SOURCE_DIR}/src/*.cpp"
	"${CMAKE_SOURCE_DIR}/src/*.cc"
)

ADD_EXECUTABLE(servertest ${SOURCES})

target_link_libraries(servertest
	${LIBEVENT_LIB}
	${EXTRA_LIB}
)

SET_TARGET_PROPERTIES(servertest PROPERTIES 
	RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR}/bin
	RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/bin
)
